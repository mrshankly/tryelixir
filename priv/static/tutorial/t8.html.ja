<h3>パターンマッチ</h3>
<p>
    Elixirでは<code>=</code>は変数への第十ではありません.
    これはパターンマッチング演算子で次のようなパターンマッチをします.
</p>
<p><code>pattern = expression</code></p>
<p>
    まず右サイドが評価され、その値が左サイドとマッチされる.
    この式がパターンと互換であればパターンマッチが成功します.
    それ以外は失敗します.
    幾つかためしてみましょう:
</p>
<p>次のパターンマッチは成功し、変数<code>a</code>は<code>2</code>に束縛されます .</p>
<p><code>{1, a} = {1, 2}</code></p>
<p>対照的に、次のパターンマッチはタプルが異なるサイズなので失敗します.</p>
<p><code>{a, b, c} = {1, 2}</code></p>
<p>
    Elixirは再束縛を許しています,だから次のような式もOKです<code>n = n + 1</code>,
    もし再束縛を許可したくなければ変数に<code>^</code>演算子を適応してください.
</p>
<p>次は動きます:</p>
<p><code>x = 1</code></p>
<p><code>^x = 1</code></p>
<p>だけど、次は失敗します:</p>
<p><code>^x = 2</code></p>
<p>次のステップ準備できたら<code>:ok</code>とタイプしてね .</p>
